extends _includes/layout.pug

block scripts 
    - var title = 'PCB'
block content 
    h1 Building the PCB 
    p The PCB is the substrate on which the switches are connected. It hosts the microcontroller, the LEDs and any other features you with to add. It also provides a mechanical connection between the switches, and can make a board more stiff. You will have control over every aspect of this circuit borad, and you can tailor it to your liking and needs.
    h1 Getting Started: 
    p Download 
        a(href="https://kicad.org") kicad 
    p Kicad is a software that we will use to design the schematic, route the PCB, and place all of the components that we need to use. 
    p Once you have Kicad downloaded, open it and create a new project. Save it to a folder that you have easy access to. 
    p In a new web browser tab, open 
        a(href="https://github.com" target="_blank") GitHub 
    p Sign in / Create an account. Click the green button that says Create a new repository.
    p Name your repository. I'm going to use `Keyboard-return`. Give the repository a description. For my project, I'm going to use `A mechanical keyboard with detachable numpad, OLED displays, rotary encoders, and QMK firmware. ` but yours should be different. It should be a description of the features of your keyboard as well as any special processes you used to design it. 
    p Select 'Add a Readme file'. This will serve as the front page of your repository.
    p For the gitignore template, select Kicad. This will help prevent sensitive information from making its way onto the public internet. 
    p Pick a license. Use 
        a(href="https://choosealicense.com/") choosealisence.com
        | . I will use the CERN Open Hardware Licence Version 2 because it doesn't let people make closed source or proprietary versions. 
    p Click create repository. 
    p Now we need to install the GitHub Command Line Interface (cli): 
        a(href="https://cli.github.com/" target="_blank") GitHub CLI 
    p On MacOS, if you have brew installed, use 
        span.code brew install gh
    p Now run 
        span.code gh auth login
        |  So your github account gets credited for any contributions you make to your repository. 
    p Navigate to the folder that your Kicad project is saved in: 
        span.code cd Path/To/Your/Folder
    p Now, run 
        span.code git init 
        |  To initialize the folder as a git repository
    p Connect Your Local Folder to the GitHub Repository: 
        span.code git remote add origin https://github.com/your-username/your-repo-name.git
    p Now, every time you make a signifact change you want to be added to the verisoning system, just run: 
    p.code git add .
    p.code git commit -m "Initial commit"
    p And then, push your changes to the remote repository: 
    p.code git push -u origin master
    p test


